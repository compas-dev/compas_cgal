[build-system]
requires = ["scikit-build-core >=0.10", "nanobind >=1.3.2"]
build-backend = "scikit_build_core.build"

[project]
name = "compas_cgal"
version = "1.0.1"
description = "CGAL wrapper for COMPAS."
readme = "README.md"
requires-python = ">=3.8"
authors = [
    { name = "Petras Vestartas", email = "petrasvestartas@gmail.com" },
    { name = "Tom van Mele", email = "van.mele@arch.ethz.ch" },
]
classifiers = [
    "License :: OSI Approved :: BSD License",
]

[project.urls]
Homepage = "https://github.com/compas-dev/compas_cgal"

[tool.pytest.ini_options]
testpaths = ["tests"]
norecursedirs = [
    "external/*",
    "build/*",
    "dist/*",
    "*.egg-info",
    ".git",
    ".tox",
    ".env",
    ".pytest_cache",
    ".ruff_cache"
]

[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "build-system.requires"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"

# Configure CMake
cmake.version = ">=3.15"
cmake.build-type = "Release"

# Set CMake args for verbose output
cmake.args = ["-DCMAKE_VERBOSE_MAKEFILE=ON"]

[tool.scikit-build.cmake.define]
CMAKE_POLICY_DEFAULT_CMP0135 = "NEW"

[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1

# Run pytest to ensure that the package was correctly built
test-command = "pytest {project}/tests"
test-requires = "pytest"

# Don't test Python 3.8 wheels on macOS/arm64
test-skip="cp38-macosx_*:arm64"

# Needed for full C++17 support
[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.14"
